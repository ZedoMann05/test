name: front

on:
  workflow_call:
    inputs:
      front_paths:
        required: true
        type: string
      bucket_url:
        required: true
        type: string
      node_version:
        required: true
        type: string

jobs:
  set_env:
    runs-on: ubuntu-latest
    env:
      BUCKET_URL: ${{ inputs.bucket_url }}
    
    outputs:
      PROJECT_ID: ${{ steps.set_env.outputs.project_id }}
      BUCKET_URL: ${{ steps.set_env.outputs.bucket_url }}
      BUCKET_BACKUP_URL: ${{ steps.set_env.outputs.bucket_backup_url }}

    steps:
      - name: set env
        id: set_env
        run: |
          if [ "${{ github.ref_name }}" == "development" ]; then
            echo "project_id=majestic-energy-420321" >> $GITHUB_OUTPUT
            echo "bucket_url=${{ env.BUCKET_URL }}-dev" >> $GITHUB_OUTPUT
            echo "bucket_backup_url=${{ env.BUCKET_URL }}-dev-backup" >> $GITHUB_OUTPUT
            echo "Set ENV to development."
          elif [ "${{ github.ref_name }}" == "staging" ]; then
            echo "project_id=majestic-energy-420321" >> $GITHUB_OUTPUT
            echo "bucket_url=${{ env.BUCKET_URL }}-staging" >> $GITHUB_OUTPUT
            echo "bucket_backup_url=${{ env.BUCKET_URL }}-staging-backup" >> $GITHUB_OUTPUT
            echo "Set ENV to staging."
          fi
    
  front:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.rollback == 'no' }}
    needs: set_env
    env:
      PROJECT_ID: ${{ needs.set_env.outputs.PROJECT_ID }}
      FRONT_PATH: ${{ inputs.front_paths }}
      BUCKET_URL: ${{ needs.set_env.outputs.BUCKET_URL }}
      BUCKET_BACKUP_URL: ${{ needs.set_env.outputs.BUCKET_BACKUP_URL }}
      NODE_VERSION: ${{ inputs.node_version }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.TEST_FRONT }}'

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
        
      - uses: actions/setup-node@v4
        with:
            node-version: '${{ env.NODE_VERSION }}'

      - name: npm install
        run: |
          cd ${{ env.FRONT_PATH }}
          npm install
    
      - name: npm build
        run: |
          cd ${{ env.FRONT_PATH }}
          npm run build

      - name: gcloud
        run: |
          cd ${{ env.FRONT_PATH }}/build
          gcloud storage cp -r ${{ env.BUCKET_URL }}/* ${{ env.BUCKET_BACKUP_URL }}
          gcloud storage rm -r ${{ env.BUCKET_URL }}/*
          gcloud storage cp -r ./* ${{ env.BUCKET_URL }}
          gcloud storage objects update -r ${{ env.BUCKET_URL }}/* --add-acl-grant=entity=allUsers,role=READER

  rollback:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.rollback == 'yes' }}
    needs: set_env
    env:
      PROJECT_ID: ${{ needs.set_env.outputs.PROJECT_ID }}
      FRONT_PATH: ${{ inputs.front_paths }}
      BUCKET_URL: ${{ needs.set_env.outputs.BUCKET_URL }}
      BUCKET_BACKUP_URL: ${{ needs.set_env.outputs.BUCKET_BACKUP_URL }}
      NODE_VERSION: ${{ inputs.node_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.TEST_FRONT }}'

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: gcloud
        run: |
          gcloud storage rm -r ${{ env.BUCKET_URL }}/*
          gcloud storage cp -r ${{ env.BUCKET_BACKUP_URL }}/* ${{ env.BUCKET_URL }}
          gcloud storage objects update -r ${{ env.BUCKET_URL }}/* --add-acl-grant=entity=allUsers,role=READER