name: Backup dev database

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'development'
      - 'master'
      - 'staging'

env:
  all_db_status: ""

jobs:
  backup_dev_db:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: proj-dev

    strategy:
      matrix:
        Plan: [getpin-main-dev-db]
    
    outputs:
      status: ${{ steps.steps_status.outputs.status }}

    steps:

      - name: Create dump for ${{ matrix.Plan }}
        id: create_dump
        run: |
            DB_NAME=$(echo ${{ matrix.Plan }} | sed 's/-db//; s/-/_/g')
            gcloud sql export sql ${{ matrix.Plan }} --database $DB_NAME gs://getpin-backup-dev-db/${{ matrix.Plan }}/${DB_NAME}_$(TZ="Europe/Kiev" date +"%Y%m%d%H%M").sql

      - name: Check steps status
        if: ${{ always() }}
        id: steps_status
        run: |
          echo "${{ steps.create_dump.outcome }}" >> status.txt
          echo "all_db_status: ${{ env.all_db_status }}"
          echo "status=${{ steps.create_dump.outcome }}" >> $GITHUB_OUTPUT

      - name: Upload status artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
            name: status
            path: status.txt

  slack_notification:
    needs: backup_dev_db
    if: ${{ always() }}
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: proj-dev
        
    steps:
      - name: Download status artifact
        uses: actions/download-artifact@v2
        with:
            name: status

      - name: Setting Slack Notification
        if: ${{ always() }}
        run: |
          cat $GITHUB_WORKSPACE/status.txt
          echo "${{ needs.backup_dev_db.outputs.status }}"
          echo "${{ env.all_db_status }}"


      # - name: Slack Notification
      #   if: ${{ always() }}
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_COLOR: ${{ needs.backup_dev_db.result }}
      #     SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
      #     SLACK_TITLE: '${{ env.SLACK_TITLE }}'
      #     SLACK_FOOTER: 'Project: ${{ env.PROJECT_ID }}; Time: ${{ env.SLACK_FOOTER }}'
      #     SLACK_WEBHOOK: ${{ secrets.GETPIN_DEV_BACKUP_SLACK_CI_WEBHOOK }}
      #     SLACK_ICON: https://avatars.slack-edge.com/2023-02-15/4830237365520_6ec25f9ef61c9165fda5_48.jpg
      #     SLACKIFY_MARKDOWN: true